[{"_raw":"{\"log\": \"2021-02-09 11:19:04.816 INFO [socket-thread-1] Event 1: Log Line 1\", \"stream\": \"stdout\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"Event 1: Log Line 2\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"Event 1: Log Line 3\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"Event 1: Log Line 4\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n","_time":1624665156.682,"multiline":true,"cribl_breaker":"JSONFileFormat"},{"_raw":"{\"log\": \"2021-02-09 11:19:04.816 INFO [socket-thread-2] Event 2: Log Line 1\", \"stream\": \"stdout\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"Event 2: Log Line 2\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"Event 2: Log Line 3\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"Event 2: Log Line 4\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n","_time":1624665156.682,"multiline":true,"cribl_breaker":"JSONFileFormat"},{"_raw":"{\"log\": \"2021-02-09 11:19:04.816 ERROR [nio-8080-exec-4] x.x.x.exceptions.RestExceptionHandler: 422 Status Code - EntityNotFoundException - XXXXXXXXXXXXXXXXXXXXXXXXX\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"xxxx.xxx.microservices.exceptions.EntityNotFoundException: XXXXXXXXXXXXXXXXXXXXXXXXX\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"   at xxx.xxx.microservices.service.XXXXXXX.lambda$getXXXData$3(XYXYXYXYX.java:139) ~[classes!/:na]\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"   at java.base/java.util.Optional.orElseThrow(Optional.java:408) ~[na:na]\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"   at xxx.xxx.microservices.rest.internal.XXXXXXX.getXXXX(XXXXXXXXXXX.java:101) ~[classes!/:na]\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"   at jdk.internal.reflect.GeneratedMethodAccessor854.invoke(Unknown Source) ~[na:na]\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"   at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"   at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"    at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.7.RELEASE.jar!/:5.2.7.RELEASE]\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n","_time":1612898344.816,"multiline":true,"cribl_breaker":"JSONFileFormat"},{"_raw":"{\"log\": \"2021-02-09 11:19:04.814 DEBUG [nio-8080-exec-8] x.x.x.service.DocumentService: retrieved: []\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n","_time":1612898344.814,"multiline":false,"cribl_breaker":"JSONFileFormat"},{"_raw":"{\"log\": \" 2021-02-09 11:19:04.816 ERROR [nio-8080-exec-4] x.x.x.exceptions.RestExceptionHandler: 422 Status Code - EntityNotFoundException - XXXXXXXXXXXXXXXXXXXXXXXXX\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"xxx.xxx.microservices.exceptions.EntityNotFoundException: XXXXXXXXXXXXXXXXXXXXXXXXX\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"   at xxx.xxx.microservices.service.XXXXXXX.lambda$getXXXData$3(XYXYXYXYX.java:139) ~[classes!/:na]\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"   at java.base/java.util.Optional.orElseThrow(Optional.java:408) ~[na:na]\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"   at xxx.xxx.microservices.rest.internal.XXXXXXX.getXXXX(XXXXXXXXXXX.java:101) ~[classes!/:na]\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"   at jdk.internal.reflect.GeneratedMethodAccessor854.invoke(Unknown Source) ~[na:na]\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"   at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"   at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"   at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.7.RELEASE.jar!/:5.2.7.RELEASE]\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n","_time":1612898344.816,"multiline":true,"cribl_breaker":"JSONFileFormat"},{"_raw":"{\"log\": \" 2021-02-09 11:19:04.816  ERROR [small-pool-thread-8] featurizer ERROR\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"java.lang.IndexOutOfBoundsException: No group 1\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat java.util.regex.Matcher.start(Matcher.java:374)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat net.customer.featurization.featurizers.utils.GenericMatcher.start(GenericMatcher.java:45)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat net.customer.featurization.detectors.regexsingulardetector.RegexDetector.findDetections(RegexDetector.java:80)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat net.customer.featurization.detectors.regexsingulardetector.RegexDetector.findDetections(RegexDetector.java:20)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat net.customer.featurization.featurizers.detections.GroupDetector.findIndividualDetections(GroupDetector.java:117)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat net.customer.featurization.featurizers.detections.GroupDetector.findDetections(GroupDetector.java:88)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat net.customer.featurization.featurizers.detections.detectioncombinationfeaturizer.DetectionCombinationFeaturizer.processPart(DetectionCombinationFeaturizer.java:118)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat net.customer.featurization.FeaturizerController.computeFeatures(FeaturizerController.java:163)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat net.customer.contentinspection.AutonomyContentExtractorEmbeddedRegex.createResultJson(AutonomyContentExtractorEmbeddedRegex.java:342)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat net.customer.contentinspection.AutonomyContentExtractorEmbeddedRegex.parse(AutonomyContentExtractorEmbeddedRegex.java:519)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat net.customer.contentinspection.ContentInspectionEmbeddedRegexRunner.call(ContentInspectionEmbeddedRegexRunner.java:59)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat net.customer.contentinspection.ContentInspectionEmbeddedRegexRunner.call(ContentInspectionEmbeddedRegexRunner.java:12)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat java.util.concurrent.FutureTask.run(FutureTask.java:166)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n{\"log\": \"\tat java.lang.Thread.run(Thread.java:724)\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}\n","_time":1612898344.816,"multiline":true,"cribl_breaker":"JSONFileFormat"},{"_raw":"{\"log\": \"2021-02-09 11:19:04.814 DEBUG [nio-8080-exec-8] x.x.x.service.DocumentService: retrieved: []\", \"stream\": \"stderr\", \"time\": \"2020-10-05T00:00:30.082640485Z\"}","_time":1612898344.814,"multiline":false,"cribl_breaker":"JSONFileFormat"}]